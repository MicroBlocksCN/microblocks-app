diff --git a/gpSupport.js b/gpSupport.js
index 8e077b5..767d4df 100644
--- a/gpSupport.js
+++ b/gpSupport.js
@@ -1,3 +1,7 @@
+function isCapacitorEnvironment() {
+	return typeof window.Capacitor !== 'undefined';
+}
+
 // Handlers are ignored in gp.html when running as a Chrome App so must be added here:
 
 function addGPHandlers() {
@@ -834,7 +838,9 @@ function hasWebSerial() {
 }
 
 function hasWebBluetooth() {
-	return (typeof navigator.bluetooth != 'undefined');
+	let ret = (typeof navigator.bluetooth != 'undefined' || window.Capacitor.Plugins.BluetoothLe)
+	ret = Boolean(ret);
+	return ret;
 }
 
 function webBluetoothConnected() {
@@ -1026,7 +1032,8 @@ function GP_writeSerialPort(data) {
 		GP.boardie.iframe.contentWindow.postMessage(data);
 		return data.buffer.byteLength;
 	} else if (webBluetoothConnected()) {
-		return bleSerial.write_data(data);
+		const result = bleSerial.write_data(data);
+		return result;
 	} else if (hasWebSerial()) {
 		return webSerialWrite(data);
 	} else if (hasChromeSerial()) {
@@ -1172,7 +1179,21 @@ class NimBLESerial {
 	}
 }
 
-const bleSerial = new NimBLESerial();
+
+if (typeof window.Capacitor !== 'undefined') {
+	// trick to load capacitor ble
+	const _lazyloadSerial = function(){
+		if (window.CapacitorBLESerial){
+			window.bleSerial = new window.CapacitorBLESerial();
+		} else {
+			setTimeout(_lazyloadSerial, 1000)
+		}
+	};
+	setTimeout(_lazyloadSerial, 1000)
+	
+} else {
+	window.bleSerial = new NimBLESerial();
+}
 
 // File read/write
 
